/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package View;


import DAO.CartaDAO;
import Model.Carta;
import java.awt.Color;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.ByteArrayInputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.sql.SQLException;
import java.text.ParseException;
import java.time.LocalDate;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.BorderFactory;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.UIManager.LookAndFeelInfo;
import javax.swing.text.MaskFormatter;

/**
 *
 * @author T-GAMER
 */
public class EditarCarta extends javax.swing.JFrame {

    static byte[] imagem;
    MaskFormatter mask;
    private File imagemFile;
    
    /**
     * Creates new form EditarCarta
     */
    public EditarCarta() {
         try {
            mask = new MaskFormatter("####");
        } catch (ParseException ex) {
            Logger.getLogger(Tela.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
    for (LookAndFeelInfo info : UIManager.getInstalledLookAndFeels()) {
        if ("Nimbus".equals(info.getName())) {
            UIManager.setLookAndFeel(info.getClassName());
            break;
        }
    }
} catch (Exception e) {
    e.printStackTrace();
}

        
        initComponents();
         this.cartadao = CartaDAO.getInstance(); 
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Panel_cadastrar = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        text_nome_carta = new javax.swing.JTextField();
        lbl_imagem = new javax.swing.JLabel();
        cb_raridade = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        cb_qualidade = new javax.swing.JComboBox<>();
        btn_atualizar = new javax.swing.JButton();
        btn_venda = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        text_colecao = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        text_codigo = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        text_valor_pago = new javax.swing.JTextField();
        spinner_quantidade = new javax.swing.JSpinner();
        jLabel11 = new javax.swing.JLabel();
        btn_cancelar = new javax.swing.JButton();
        btn_excluir = new javax.swing.JButton();
        text_id = new javax.swing.JTextField();
        text_ano_venda = new javax.swing.JTextField();
        text_valor_venda = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        text_data_compra = new javax.swing.JFormattedTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);
        setSize(new java.awt.Dimension(800, 600));

        Panel_cadastrar.setBorder(new javax.swing.border.MatteBorder(null));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        jLabel2.setText("Nome da Carta");

        text_nome_carta.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        text_nome_carta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                text_nome_cartaActionPerformed(evt);
            }
        });

        lbl_imagem.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        lbl_imagem.setText("       Adicionar");
        lbl_imagem.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        lbl_imagem.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lbl_imagem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lbl_imagemMouseClicked(evt);
            }
        });

        cb_raridade.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        cb_raridade.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "NORMAL", "RARA", "SUPER RARA", "ULTRA RARA", "ULTIMATE RARA", "HOLOGRAPHIC RARE", "SECRETA RARA" }));
        cb_raridade.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                cb_raridadeAncestorAdded(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        jLabel3.setText("Raridade");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        jLabel4.setText("Qualidade");

        cb_qualidade.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        cb_qualidade.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "NOVA (M)", "QUASE NOVA (NM)", "LIGEIRAMENTE JOGADA (SP)", "MODERADAMENTE JOGADA (MP)", "JOGADA DEMAIS (HP)", "DANIFICADA (DM)" }));
        cb_qualidade.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                cb_qualidadeAncestorAdded(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        cb_qualidade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_qualidadeActionPerformed(evt);
            }
        });

        btn_atualizar.setBackground(new java.awt.Color(0, 153, 0));
        btn_atualizar.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        btn_atualizar.setForeground(new java.awt.Color(255, 255, 255));
        btn_atualizar.setText("Atualizar");
        btn_atualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_atualizarActionPerformed(evt);
            }
        });

        btn_venda.setBackground(new java.awt.Color(0, 51, 255));
        btn_venda.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        btn_venda.setForeground(new java.awt.Color(255, 255, 255));
        btn_venda.setText("Vender");
        btn_venda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_vendaActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        jLabel5.setText("Coleção");

        text_colecao.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        text_colecao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                text_colecaoActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        jLabel6.setText("Código");

        text_codigo.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        text_codigo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                text_codigoActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        jLabel7.setText("Ano Compra");

        jLabel8.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        jLabel8.setText("Valor Pago");

        text_valor_pago.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        text_valor_pago.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                text_valor_pagoActionPerformed(evt);
            }
        });

        spinner_quantidade.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N

        jLabel11.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        jLabel11.setText("Quantidade");

        btn_cancelar.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        btn_cancelar.setText("Cancelar");
        btn_cancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_cancelarActionPerformed(evt);
            }
        });

        btn_excluir.setBackground(new java.awt.Color(204, 0, 0));
        btn_excluir.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        btn_excluir.setForeground(new java.awt.Color(255, 255, 255));
        btn_excluir.setText("Excluir");
        btn_excluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_excluirActionPerformed(evt);
            }
        });

        text_ano_venda.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N

        text_valor_venda.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        jLabel1.setText("Ano Venda");

        jLabel9.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        jLabel9.setText("Valor Venda");

        text_data_compra = new javax.swing.JFormattedTextField(mask);
        text_data_compra.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N

        javax.swing.GroupLayout Panel_cadastrarLayout = new javax.swing.GroupLayout(Panel_cadastrar);
        Panel_cadastrar.setLayout(Panel_cadastrarLayout);
        Panel_cadastrarLayout.setHorizontalGroup(
            Panel_cadastrarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Panel_cadastrarLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(Panel_cadastrarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lbl_imagem, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(Panel_cadastrarLayout.createSequentialGroup()
                        .addComponent(btn_atualizar)
                        .addGap(18, 18, 18)
                        .addComponent(btn_cancelar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(Panel_cadastrarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Panel_cadastrarLayout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(70, 70, 70)
                        .addComponent(text_id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(Panel_cadastrarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(text_nome_carta)
                        .addGroup(Panel_cadastrarLayout.createSequentialGroup()
                            .addGroup(Panel_cadastrarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(Panel_cadastrarLayout.createSequentialGroup()
                                    .addGroup(Panel_cadastrarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel6)
                                        .addComponent(text_codigo, javax.swing.GroupLayout.PREFERRED_SIZE, 343, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(Panel_cadastrarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(spinner_quantidade, javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jLabel11, javax.swing.GroupLayout.Alignment.TRAILING)))
                                .addGroup(Panel_cadastrarLayout.createSequentialGroup()
                                    .addGroup(Panel_cadastrarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel5)
                                        .addComponent(text_colecao, javax.swing.GroupLayout.PREFERRED_SIZE, 485, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(Panel_cadastrarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Panel_cadastrarLayout.createSequentialGroup()
                                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(jLabel9))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Panel_cadastrarLayout.createSequentialGroup()
                                                .addGroup(Panel_cadastrarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addGroup(Panel_cadastrarLayout.createSequentialGroup()
                                                        .addComponent(btn_venda, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addGap(32, 32, 32))
                                                    .addGroup(Panel_cadastrarLayout.createSequentialGroup()
                                                        .addComponent(text_ano_venda, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addGap(18, 18, 18)))
                                                .addGroup(Panel_cadastrarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                    .addComponent(btn_excluir, javax.swing.GroupLayout.DEFAULT_SIZE, 82, Short.MAX_VALUE)
                                                    .addComponent(text_valor_venda)))))
                                    .addGap(0, 0, Short.MAX_VALUE)))
                            .addGap(18, 18, 18)
                            .addGroup(Panel_cadastrarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(cb_raridade, 0, 248, Short.MAX_VALUE)
                                .addComponent(cb_qualidade, 0, 0, Short.MAX_VALUE)
                                .addComponent(jLabel4)
                                .addComponent(jLabel3)
                                .addGroup(Panel_cadastrarLayout.createSequentialGroup()
                                    .addGroup(Panel_cadastrarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(text_data_compra))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(Panel_cadastrarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(text_valor_pago, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)))))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        Panel_cadastrarLayout.setVerticalGroup(
            Panel_cadastrarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Panel_cadastrarLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(Panel_cadastrarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Panel_cadastrarLayout.createSequentialGroup()
                        .addComponent(lbl_imagem, javax.swing.GroupLayout.PREFERRED_SIZE, 304, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 21, Short.MAX_VALUE)
                        .addGroup(Panel_cadastrarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btn_atualizar)
                            .addComponent(btn_cancelar)
                            .addComponent(btn_venda)
                            .addComponent(btn_excluir)))
                    .addGroup(Panel_cadastrarLayout.createSequentialGroup()
                        .addGroup(Panel_cadastrarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(text_id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(text_nome_carta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(Panel_cadastrarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(Panel_cadastrarLayout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(Panel_cadastrarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(text_colecao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(text_data_compra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(Panel_cadastrarLayout.createSequentialGroup()
                                .addGroup(Panel_cadastrarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel8))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(text_valor_pago, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(Panel_cadastrarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(Panel_cadastrarLayout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jLabel11)
                                .addGap(6, 6, 6)
                                .addComponent(spinner_quantidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(Panel_cadastrarLayout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addGroup(Panel_cadastrarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(Panel_cadastrarLayout.createSequentialGroup()
                                        .addComponent(jLabel4)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(cb_qualidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(Panel_cadastrarLayout.createSequentialGroup()
                                        .addComponent(jLabel6)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(text_codigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(Panel_cadastrarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jLabel9)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(Panel_cadastrarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cb_raridade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(text_valor_venda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(text_ano_venda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        text_id.setVisible(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Panel_cadastrar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Panel_cadastrar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void text_nome_cartaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_text_nome_cartaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_text_nome_cartaActionPerformed

    private void text_colecaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_text_colecaoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_text_colecaoActionPerformed

    private void text_codigoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_text_codigoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_text_codigoActionPerformed

    private void text_valor_pagoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_text_valor_pagoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_text_valor_pagoActionPerformed

    private void btn_atualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_atualizarActionPerformed
       

				if (!text_nome_carta.getText().isEmpty()) {
					if (!text_codigo.getText().isEmpty()) {
						if (!text_colecao.getText().isEmpty()) {
							if (!text_data_compra.getText().isEmpty()) {
								if (!text_valor_pago.getText().isEmpty()) {
									Carta carta = new Carta(text_nome_carta.getText().toUpperCase(),
											text_codigo.getText().toUpperCase(), text_colecao.getText().toUpperCase(),
											text_data_compra.getText(),
											Float.parseFloat(text_valor_pago.getText().replace("R$", "")),
											cb_raridade.getSelectedItem().toString(),
											cb_qualidade.getSelectedItem().toString());

									if (text_ano_venda.getText().isEmpty()) {
										carta.setAno_venda("Não vendida");
									} else {
										carta.setAno_venda(text_ano_venda.getText());
									}

									carta.setQuantidade(Integer.parseInt(spinner_quantidade.getValue().toString()));
									if (text_valor_venda.getText().isEmpty()) {
										carta.setValor_venda(0);
									} else {
										carta.setValor_venda(
												Float.parseFloat(text_valor_venda.getText().replace("R$", "")));
									}

									carta.setId(Integer.parseInt(text_id.getText()));
									int resposta = JOptionPane.showConfirmDialog(null,
											"Deseja realmente atualizar esta carta?", "Confirmação",
											JOptionPane.YES_NO_OPTION);

									if (resposta == JOptionPane.YES_OPTION) {
                                                                            try {
                                                                                if(imagemFile==null){
                                                                                    
                                                                                    if (cartadao.update(carta, null)) {
                                                                                    JOptionPane.showMessageDialog(null, "Carta atualizada com sucesso!",
                                                                                            "Sucesso!", JOptionPane.INFORMATION_MESSAGE);
                                                                                    retorna_cartas(Integer.parseInt(text_id.getText()));
                                                                                    esconder_botao_venda();
                                                                                    btn_cancelar.doClick();
                                                                                    
                                                                                } else {
                                                                                    
                                                                                    JOptionPane.showMessageDialog(null, "Erro ao atualizar imagem!", "Atenção!",
                                                                                            JOptionPane.ERROR_MESSAGE);
                                                                                    
                                                                                }
                                                                                }else{
                                                                                   if (cartadao.update(carta, carregarImagem(imagemFile))) {
                                                                                    JOptionPane.showMessageDialog(null, "Carta atualizada com sucesso!",
                                                                                            "Sucesso!", JOptionPane.INFORMATION_MESSAGE);
                                                                                    retorna_cartas(Integer.parseInt(text_id.getText()));
                                                                                    esconder_botao_venda();
                                                                                    btn_cancelar.doClick();
                                                                                    
                                                                                } else {
                                                                                    
                                                                                    JOptionPane.showMessageDialog(null, "Erro ao atualizar imagem!", "Atenção!",
                                                                                            JOptionPane.ERROR_MESSAGE);
                                                                                    
                                                                                } 
                                                                                }
                                                                                
                                                                            } catch (IOException ex) {
                                                                                Logger.getLogger(EditarCarta.class.getName()).log(Level.SEVERE, null, ex);
                                                                            }
									} else {
										JOptionPane.showMessageDialog(null, "Operação cancelada!", "Retroceder!",
												JOptionPane.INFORMATION_MESSAGE);
										retorna_cartas(Integer.parseInt(text_id.getText()));
									}

								} else {
									text_valor_pago.setBorder(BorderFactory.createLineBorder(Color.RED, 2));
									JOptionPane.showMessageDialog(null, "Por favor, insira o valor de compra da carta!",
											"Atenção", JOptionPane.WARNING_MESSAGE);
									text_valor_pago.setBorder(UIManager.getBorder("TextField.border"));
								}
							} else {
								text_data_compra.setBorder(BorderFactory.createLineBorder(Color.RED, 2));
								JOptionPane.showMessageDialog(null, "Por favor, insira a data de compra da carta!",
										"Atenção", JOptionPane.WARNING_MESSAGE);
								text_data_compra.setBorder(UIManager.getBorder("TextField.border"));
							}

						} else {
							text_colecao.setBorder(BorderFactory.createLineBorder(Color.RED, 2));
							JOptionPane.showMessageDialog(null, "Por favor, insira a coleção da carta!", "Atenção",
									JOptionPane.WARNING_MESSAGE);
							text_colecao.setBorder(UIManager.getBorder("TextField.border"));
						}

					} else {
						text_codigo.setBorder(BorderFactory.createLineBorder(Color.RED, 2));
						JOptionPane.showMessageDialog(null, "Por favor, insira o código carta!", "Atenção",
								JOptionPane.WARNING_MESSAGE);
						text_codigo.setBorder(UIManager.getBorder("TextField.border"));
					}

				} else {
					text_nome_carta.setBorder(BorderFactory.createLineBorder(Color.RED, 2));
					JOptionPane.showMessageDialog(null, "Por favor, insira o nome da carta!", "Atenção",
							JOptionPane.WARNING_MESSAGE);
					text_nome_carta.setBorder(UIManager.getBorder("TextField.border"));
				}

    }//GEN-LAST:event_btn_atualizarActionPerformed

    private void btn_excluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_excluirActionPerformed
            
				int resposta = JOptionPane.showConfirmDialog(null, "Deseja excluir esta carta?", "Confirmação",
						JOptionPane.YES_NO_OPTION);

				if (resposta == JOptionPane.YES_OPTION) {
					if (cartadao.deletar(Integer.parseInt(text_id.getText()))) {
						JOptionPane.showMessageDialog(null, "Carta excluída com sucesso!", "Sucesso!",
								JOptionPane.INFORMATION_MESSAGE);
						dispose();
						Tela tela = null;
                                                tela = new Tela();
						//tela.setExtendedState(JFrame.MAXIMIZED_BOTH);
						tela.setVisible(true);
					} else {
						JOptionPane.showMessageDialog(null, "Erro ao excluir Carta!", "Erro!",
								JOptionPane.ERROR_MESSAGE);

					}
				} else {
					JOptionPane.showMessageDialog(null, "Operação cancelada!", "Retroceder!",
							JOptionPane.INFORMATION_MESSAGE);
				}// TODO add your handling code here:
    }//GEN-LAST:event_btn_excluirActionPerformed

    private void btn_cancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_cancelarActionPerformed
        dispose();
				Tela tela = null;
                                tela = new Tela();
				//tela.setExtendedState(JFrame.MAXIMIZED_BOTH);
				tela.setVisible(true);
    }//GEN-LAST:event_btn_cancelarActionPerformed

    private void lbl_imagemMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbl_imagemMouseClicked

				JFileChooser jfc = new JFileChooser(
						"");
				jfc.setDialogTitle("Selecionar arquivo");

				int resultado = jfc.showOpenDialog(jfc);

				if (resultado == JFileChooser.APPROVE_OPTION) {
					try {
						fis = new FileInputStream(jfc.getSelectedFile());
                                                imagemFile = new File(jfc.getSelectedFile().getAbsolutePath());
						tamanho = (int) jfc.getSelectedFile().length();
						Image foto = ImageIO.read(jfc.getSelectedFile()).getScaledInstance(lbl_imagem.getWidth(),
								lbl_imagem.getHeight(), Image.SCALE_SMOOTH);
						lbl_imagem.setIcon(new ImageIcon(foto));
						lbl_imagem.updateUI();

					} catch (IOException e1) {
					}
				}        // TODO add your handling code here:
    }//GEN-LAST:event_lbl_imagemMouseClicked

    private void btn_vendaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_vendaActionPerformed
        

				if (controle < 0) {
                                    return;
				} else {
					controle--;
					int resposta = JOptionPane.showConfirmDialog(null, "Deseja realmente vender esta carta?",
							"Confirmação", JOptionPane.YES_NO_OPTION);
					if (resposta == JOptionPane.YES_OPTION) {
						if (text_ano_venda.getText().replace("R$", "").equals("0.0")
								|| text_ano_venda.getText().isEmpty() || text_ano_venda.getText().equals("R$0.0")) {
							Carta carta = new Carta(text_nome_carta.getText().toUpperCase(),
									text_codigo.getText().toUpperCase(), text_colecao.getText().toUpperCase(),
									text_data_compra.getText(),
									Float.parseFloat(text_valor_pago.getText().replace("R$", "")),
									cb_raridade.getSelectedItem().toString(),
									cb_qualidade.getSelectedItem().toString());
							carta.setAno_venda("Não vendida");
							carta.setValor_venda(0);
							if (cartadao.vender(Integer.parseInt(text_id.getText()))) {
								if (cartadao.inserir_venda(carta,imagem)) {
									JOptionPane.showMessageDialog(null, "Carta vendida com sucesso!", "Sucesso!",
											JOptionPane.INFORMATION_MESSAGE);
									btn_cancelar.doClick();
//									retorna_cartas(Integer.parseInt(text_id.getText()));
//									esconder_botao_venda();

								} else {
									JOptionPane.showMessageDialog(null, "Erro ao vender carta, problema coma a imagem!",
											"Erro!", JOptionPane.ERROR_MESSAGE);

								}

							} else {
								JOptionPane.showMessageDialog(null, "Erro ao vender carta!", "Erro!",
										JOptionPane.ERROR_MESSAGE);

							}

						} else {
							Carta carta = new Carta(text_nome_carta.getText().toUpperCase(),
									text_codigo.getText().toUpperCase(), text_colecao.getText().toUpperCase(),
									text_data_compra.getText(),
									Float.parseFloat(text_valor_pago.getText().replace("R$", "")),
									cb_raridade.getSelectedItem().toString(),
									cb_qualidade.getSelectedItem().toString());
							carta.setAno_venda(String.valueOf(LocalDate.now().getYear()));
							carta.setValor_venda(Float.parseFloat(text_valor_venda.getText().replace("R$", "")));

							if (cartadao.vender(Integer.parseInt(text_id.getText()))) {
								if (cartadao.inserir_venda(carta, imagem)) {
									JOptionPane.showMessageDialog(null, "Carta vendida com sucesso!", "Sucesso!",
											JOptionPane.INFORMATION_MESSAGE);
									btn_cancelar.doClick();
//									retorna_cartas(Integer.parseInt(text_id.getText()));
//									esconder_botao_venda();

								} else {
									JOptionPane.showMessageDialog(null, "Erro ao vender carta, problema coma a imagem!",
											"Erro!", JOptionPane.ERROR_MESSAGE);

								}

							} else {
								JOptionPane.showMessageDialog(null, "Erro ao vender carta!", "Erro!",
										JOptionPane.ERROR_MESSAGE);

							}
						}

					} else {
						JOptionPane.showMessageDialog(null, "Operação cancelada!", "Retroceder!",
								JOptionPane.INFORMATION_MESSAGE);
						retorna_cartas(Integer.parseInt(text_id.getText()));
					}
				}
    }//GEN-LAST:event_btn_vendaActionPerformed

    private void cb_raridadeAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_cb_raridadeAncestorAdded
        // TODO add your handling code here:
        
        
       				// Limpar Combo Box
				cb_raridade.removeAllItems();			

				for (String r :  cartadao.raridade()) {
					cb_raridade.addItem(r);
				}

				cb_raridade.setSelectedItem(raridade);
    }//GEN-LAST:event_cb_raridadeAncestorAdded

    private void cb_qualidadeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_qualidadeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cb_qualidadeActionPerformed

    private void cb_qualidadeAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_cb_qualidadeAncestorAdded
        // TODO add your handling code here:
        

				// Limpar Combo Box
				cb_qualidade.removeAllItems();			

				for (String q : cartadao.qualidade()) {
					cb_qualidade.addItem(q);
				}

				cb_qualidade.setSelectedItem(qualidade);
    }//GEN-LAST:event_cb_qualidadeAncestorAdded

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EditarCarta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new EditarCarta().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Panel_cadastrar;
    private javax.swing.JButton btn_atualizar;
    private javax.swing.JButton btn_cancelar;
    private javax.swing.JButton btn_excluir;
    static javax.swing.JButton btn_venda;
    static javax.swing.JComboBox<String> cb_qualidade;
    static javax.swing.JComboBox<String> cb_raridade;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    static javax.swing.JLabel lbl_imagem;
    static javax.swing.JSpinner spinner_quantidade;
    static javax.swing.JTextField text_ano_venda;
    static javax.swing.JTextField text_codigo;
    static javax.swing.JTextField text_colecao;
    static javax.swing.JFormattedTextField text_data_compra;
    static javax.swing.JTextField text_id;
    static javax.swing.JTextField text_nome_carta;
    static javax.swing.JTextField text_valor_pago;
    static javax.swing.JTextField text_valor_venda;
    // End of variables declaration//GEN-END:variables
static int quantidade_atual;
static int tamanho; // tamanho da imagem em bytes
static String qualidade;
static String raridade;
	static int controle = 0;
    
    static FileInputStream fis;// instanciar fluxo de bytes

	
	CartaDAO cartadao;
        
        
        public void retorna_cartas(int id) {
		for (Carta c : cartadao.select_by_id(id)) {
			text_nome_carta.setText(c.getNome_carta());
			text_codigo.setText(c.getCodigo());
			text_colecao.setText(c.getColecao());
			text_ano_venda.setText(c.getAno_venda());
			text_data_compra.setText(c.getAno_compra());
			text_valor_pago.setText("R$" + String.valueOf(c.getValor_pago()));
			text_valor_venda.setText("R$" + String.valueOf(c.getValor_venda()));
			cb_qualidade.setSelectedItem(c.getQualidade());
			cb_raridade.setSelectedItem(c.getRaridade());
			spinner_quantidade.setValue(c.getQuantidade());
			byte img[] = c.getIcone();
			try {
				//byte  = blob.getBytes(1, (int) blob.length());
				BufferedImage imagem = null;
				imagem = ImageIO.read(new ByteArrayInputStream(img));
				ImageIcon icone = new ImageIcon(imagem);
				Icon foto = new ImageIcon(icone.getImage().getScaledInstance(200, 304, Image.SCALE_SMOOTH));
				lbl_imagem.setIcon(foto);

			} catch (IOException e1) {
                            // TODO Auto-generated catch block

			}
                    // TODO Auto-generated catch block
                    

		}

	}

	public void esconder_botao_venda() {
		if (Integer.parseInt(spinner_quantidade.getValue().toString()) < 1) {
			btn_venda.setVisible(false);
			spinner_quantidade.setEnabled(false);
		} else {
			btn_venda.setVisible(true);
			btn_venda.setEnabled(true);
			spinner_quantidade.setEnabled(true);

		}

	}
        
        private static byte[] carregarImagem(File file) throws IOException {
        byte[] bytesArray = new byte[(int) file.length()];
        try (FileInputStream fis = new FileInputStream(file)) {
            fis.read(bytesArray);
        }
        return bytesArray;
    }
}
